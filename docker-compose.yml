services:
  laravel.test:
    build:
      context: './vendor/laravel/sail/runtimes/8.4'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/app'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - pgsql
      - mongodb
      - redis
      - mailpit
      - rabbitmq

  queue-worker:
    build:
      context: './vendor/laravel/sail/runtimes/8.4'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/app'
    depends_on:
      pgsql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
      mongodb:
        condition: service_started
    command: >
      sh -c "sleep 3 &&
      php artisan queue:work rabbitmq
      --queue=notifications
      --sleep=3 --tries=3 --timeout=90"
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - .:/var/www/html
    networks:
      - sail
    restart: unless-stopped
  pgsql:
    image: 'postgres:17'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'sail-pgsql:/var/lib/postgresql/data'
      - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s

  mongodb:
    image: mongo:8
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - sail-mongodb:/data/db
    networks:
      - sail

  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sail-redis:/data'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - sail

  rabbitmq:
    image: 'rabbitmq:4-management'
    hostname: rabbitmq
    ports:
      - '${FORWARD_RABBITMQ_PORT:-5672}:5672'
      - '${FORWARD_RABBITMQ_DASHBOARD_PORT:-15672}:15672'
    environment:
      RABBITMQ_HOST: '%'
      RABBITMQ_USER: '${RABBITMQ_USER}'
      RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
      RABBITMQ_VHOST: '${RABBITMQ_VHOST}'
      RABBITMQ_QUEUE: '${RABBITMQ_QUEUE}'
    volumes:
      - 'sail-rabbitmq:/var/lib/rabbitmq'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - rabbitmq-diagnostics
        - '-q'
        - ping
      retries: 3
      timeout: 5s

networks:
  sail:
    driver: bridge

volumes:
  sail-pgsql:
    driver: local
  sail-mongodb:
    driver: local
  sail-redis:
    driver: local
  sail-rabbitmq:
    driver: local
